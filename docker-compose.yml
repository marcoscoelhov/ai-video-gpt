version: '3.8'

services:
  # Serviço Redis para filas e cache
  redis:
    image: redis:7-alpine
    container_name: ai-video-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - ai-video-network

  # Aplicação principal
  app:
    build: .
    container_name: ai-video-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
      - RATELIMIT_STORAGE_URL=redis://redis:6379/1
      - SECRET_KEY=${SECRET_KEY:-change-this-secret-key-in-production}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - API_KEY=${API_KEY:-your-api-key-here}
      - REQUIRE_API_KEY=${REQUIRE_API_KEY:-true}
    volumes:
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-video-network

  # Worker para processamento de vídeos
  worker:
    build: .
    container_name: ai-video-worker
    restart: unless-stopped
    command: python start_worker.py --workers 2 --log-level INFO
    environment:
      - ENVIRONMENT=production
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
    volumes:
      - ./outputs:/app/outputs
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      app:
        condition: service_healthy
    networks:
      - ai-video-network

  # Nginx como proxy reverso (opcional)
  nginx:
    image: nginx:alpine
    container_name: ai-video-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - ai-video-network
    profiles:
      - production

volumes:
  redis_data:
    driver: local

networks:
  ai-video-network:
    driver: bridge