#!/usr/bin/env python3
"""
Demo do AI Video GPT com Google Imagen 4

Este script demonstra a nova integra√ß√£o com Google Imagen 4 para gera√ß√£o de imagens.
Requer configura√ß√£o do Google Cloud Project.
"""

import os
import sys
from dotenv import load_dotenv
from pathlib import Path

# Add src directory to Python path
sys.path.append(os.path.join(os.path.dirname(__file__), 'src'))

def check_google_cloud_config():
    """Verifica se o Google Cloud est√° configurado"""
    load_dotenv()
    
    print("üîç Verificando configura√ß√£o do Google Cloud...")
    
    project_id = os.getenv("GOOGLE_CLOUD_PROJECT")
    location = os.getenv("GOOGLE_CLOUD_LOCATION", "us-central1")
    
    if not project_id or project_id == "your_project_id_here":
        print("‚ùå GOOGLE_CLOUD_PROJECT n√£o configurado no arquivo .env")
        print("   Configure seu Project ID do Google Cloud")
        print("   Exemplo: GOOGLE_CLOUD_PROJECT=meu-projeto-123")
        return False
        
    print(f"‚úÖ Google Cloud Project: {project_id}")
    print(f"‚úÖ Location: {location}")
    
    # Verificar se as credenciais est√£o configuradas
    if not os.getenv("GOOGLE_APPLICATION_CREDENTIALS"):
        print("‚ö†Ô∏è  GOOGLE_APPLICATION_CREDENTIALS n√£o configurado")
        print("   Voc√™ pode usar Application Default Credentials (ADC)")
        print("   Execute: gcloud auth application-default login")
    else:
        print("‚úÖ Credenciais configuradas via GOOGLE_APPLICATION_CREDENTIALS")
    
    return True

def test_imagen_generation():
    """Testa a gera√ß√£o de imagens com Google Imagen"""
    print("\nüé® Testando gera√ß√£o de imagens com Google Imagen 4...")
    
    try:
        from imagegen import test_image_generation
        test_image_generation()
    except Exception as e:
        print(f"‚ùå Erro ao testar gera√ß√£o de imagens: {e}")
        return False
    
    return True

def check_dependencies():
    """Verifica se as depend√™ncias est√£o instaladas"""
    print("\nüì¶ Verificando depend√™ncias...")
    
    required_packages = [
        ('vertexai', 'vertexai'),
        ('google.cloud.aiplatform', 'google.cloud.aiplatform'),
        ('google_generativeai', 'google.generativeai')
    ]
    
    missing_packages = []
    
    for display_name, import_name in required_packages:
        try:
            __import__(import_name)
            print(f"‚úÖ {display_name}")
        except ImportError:
            print(f"‚ùå {display_name}")
            missing_packages.append(display_name)
    
    if missing_packages:
        print(f"\n‚ö†Ô∏è  Instale as depend√™ncias faltantes:")
        print(f"pip install -r requirements.txt")
        return False
    
    return True

def show_project_status():
    """Mostra o status geral do projeto"""
    print("\nüìä Status do Projeto AI Video GPT")
    print("=" * 50)
    
    # Verificar arquivos principais
    main_files = [
        'main.py',
        'src/imagegen.py',
        'src/scriptgen.py',
        'src/voice.py',
        'requirements.txt',
        '.env'
    ]
    
    print("\nüìÅ Arquivos principais:")
    for file in main_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file}")
    
    # Verificar diret√≥rios
    directories = ['src', 'output', 'tasks']
    print("\nüìÇ Diret√≥rios:")
    for directory in directories:
        if os.path.exists(directory):
            print(f"‚úÖ {directory}/")
        else:
            print(f"‚ùå {directory}/")

def main():
    """Fun√ß√£o principal do demo"""
    print("üé¨ Demo AI Video GPT - Google Imagen 4")
    print("=" * 50)
    
    # Verificar depend√™ncias
    if not check_dependencies():
        print("\n‚ùå Depend√™ncias n√£o atendidas. Execute 'pip install -r requirements.txt'")
        return
    
    # Verificar configura√ß√£o do Google Cloud
    if not check_google_cloud_config():
        print("\n‚ùå Configure o Google Cloud antes de continuar.")
        print("\nüìã Passos para configura√ß√£o:")
        print("1. Crie um projeto no Google Cloud Console")
        print("2. Ative a API Vertex AI")
        print("3. Configure autentica√ß√£o: gcloud auth application-default login")
        print("4. Adicione GOOGLE_CLOUD_PROJECT=seu-projeto no arquivo .env")
        return
    
    # Testar gera√ß√£o de imagens
    test_imagen_generation()
    
    # Mostrar status do projeto
    show_project_status()
    
    print("\nüéØ Pr√≥ximos passos:")
    print("1. Configure suas credenciais do Google Cloud")
    print("2. Execute: python demo_google_imagen.py")
    print("3. Para gerar um v√≠deo completo: python main.py --theme 'seu tema'")
    
    print("\n‚ú® Integra√ß√£o com Google Imagen 4 conclu√≠da!")

if __name__ == "__main__":
    main()